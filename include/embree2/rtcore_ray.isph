// ======================================================================== //
// Copyright 2009-2014 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#ifndef __RTCORE_RAY_ISPH__
#define __RTCORE_RAY_ISPH__

/*! \ingroup embree_kernel_api_ispc */
/*! \{ */

#ifdef _WIN32
#  define RTCORE_ALIGN(...) // FIXME: need to specify alignment
#else
#  define RTCORE_ALIGN(...) // FIXME: need to specify alignment
#endif

/*! Ray structure for uniform (single) rays. */
RTCORE_ALIGN(16) struct RTCRay1 
{
  /* ray data */
  uniform float org[3];      //!< Ray origin
  uniform float align0;      //!< unused member to force alignment of following members
  
  uniform float dir[3];      //!< Ray direction
  uniform float align1;      //!< unused member to force alignment of following members
  
  uniform float tnear;       //!< Start of ray segment
  uniform float tfar;        //!< End of ray segment (set to hit distance)
  uniform float time;        //!< Time of this ray for motion blur
  uniform int   mask;        //!< Used to mask out objects during traversal
  
  /* hit data */
  uniform float Ng[3];       //!< Unnormalized geometry normal
  uniform float align2;
  
  uniform float u;           //!< Barycentric u coordinate of hit
  uniform float v;           //!< Barycentric v coordinate of hit

  uniform int geomID;        //!< geometry ID
  uniform int primID;        //!< primitive ID
  uniform int instID;        //!< instance ID

  varying float align[0]; //!< this variable causes ISPC to align the struct on the stack
};

/*! Ray structure for packets of 4 rays. */
struct RTCRay
{
  /* ray data */
  float orgx;  //!< x coordinate of ray origin
  float orgy;  //!< y coordinate of ray origin
  float orgz;  //!< z coordinate of ray origin
  
  float dirx;  //!< x coordinate of ray direction
  float diry;  //!< y coordinate of ray direction
  float dirz;  //!< z coordinate of ray direction
  
  float tnear; //!< Start of ray segment 
  float tfar;  //!< End of ray segment   
  float time;  //!< Time of this ray for motion blur
  int   mask;  //!< Used to mask out objects during traversal
  
  /* hit data */
  float Ngx;   //!< x coordinate of geometry normal
  float Ngy;   //!< y coordinate of geometry normal
  float Ngz;   //!< z coordinate of geometry normal
  
  float u;     //!< Barycentric u coordinate of hit
  float v;     //!< Barycentric v coordinate of hit
  
  int geomID;     //!< geometry ID
  int primID;     //!< primitive ID
  int instID;     //!< instance ID
};


/*! @} */

#endif
